# -*- coding: utf-8 -*-
"""Đồ án ML1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RyqUyUiDBuLJ-jeIZ-yvIlDH35B4qSM2
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

from sklearn.model_selection import train_test_split
from sklearn.preprocessing import RobustScaler
from sklearn import linear_model
from sklearn.linear_model import LinearRegression

import kagglehub

# Download latest version
path = kagglehub.dataset_download("debajyotipodder/co2-emission-by-vehicles")

print("Path to dataset files:", path)

df = pd.read_csv('CO2 Emissions_Canada.csv')
df

df.info()
df.shape

df.isnull().sum()

df.duplicated().value_counts()

clean_data = df.drop_duplicates()
clean_data.duplicated().value_counts()

plt.scatter(df["Fuel Consumption City (L/100 km)"], df["CO2 Emissions(g/km)"], color = "green")
plt.xlabel("CO2 Emissions(g/km)")
plt.ylabel("Fuel Consumption City (L/100 km)")
plt.show()

filtered_df = df.loc[df["Engine Size(L)"] <= 2.0]
filtered_df

plt.scatter(filtered_df["Fuel Consumption City (L/100 km)"], filtered_df["CO2 Emissions(g/km)"], color = "green")
plt.xlabel("CO2 Emissions(g/km)")
plt.ylabel("Fuel Consumption City (L/100 km)")
plt.show()

numeric_cols = filtered_df.select_dtypes(include=['number'])

Q1 = numeric_cols.quantile(0.25)
Q3 = numeric_cols.quantile(0.75)
IQR = Q3 - Q1

filtered_df = filtered_df[~((numeric_cols < (Q1 - 1.5 * IQR)) | (numeric_cols > (Q3 + 1.5 * IQR))).any(axis=1)]

plt.boxplot(filtered_df['Fuel Consumption City (L/100 km)'])
plt.show()

plt.scatter(filtered_df["Fuel Consumption City (L/100 km)"], filtered_df["CO2 Emissions(g/km)"], color = "green")
plt.xlabel("CO2 Emissions(g/km)")
plt.ylabel("Fuel Consumption City (L/100 km)")
plt.show()

scaler = RobustScaler()
filtered_df['CO2_scale'] = scaler.fit_transform(filtered_df[['CO2 Emissions(g/km)']])

df_cleaned = filtered_df[(filtered_df['CO2_scale'] <= 3)]
df_cleaned

X = df_cleaned[["CO2 Emissions(g/km)"]]
y = df_cleaned["Fuel Consumption City (L/100 km)"]
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=16)

model = LinearRegression()
model.fit(X_train, y_train)

X_train.shape
y_train.shape

y_pred = model.predict(X_test)

plt.scatter(X_train, y_train, color = "green", label = "data")
plt.plot(X_test, y_pred, color = "red", label = "Linear regression")
plt.xlabel("CO2 Emissions(g/km)")
plt.ylabel("Fuel Consumption City (L/100 km)")
plt.tight_layout()
plt.legend()
plt.show()